// This file is generated by atrium-codegen. Do not edit.
//! Definitions for the `com.atproto.server.listAppPasswords` namespace.

/// List all app-specific passwords.
#[async_trait::async_trait]
pub trait ListAppPasswords: crate::xrpc::XrpcClient {
    async fn list_app_passwords(&self) -> Result<Output, Box<dyn std::error::Error>> {
        let body = crate::xrpc::XrpcClient::send::<Error>(
            self,
            http::Method::GET,
            "com.atproto.server.listAppPasswords",
            None,
            None,
            None,
        )
        .await?;
        serde_json::from_slice(&body).map_err(|e| e.into())
    }
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct Output {
    pub passwords: Vec<AppPassword>,
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "error", content = "message")]
pub enum Error {
    AccountTakedown(Option<String>),
}

// com.atproto.server.listAppPasswords#appPassword
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct AppPassword {
    pub created_at: String,
    pub name: String,
}
