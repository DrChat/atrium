// This file is generated by atrium-codegen. Do not edit.
//! Definitions for the `com.atproto.server.createInviteCodes` namespace.

/// Create an invite code.
#[async_trait::async_trait]
pub trait CreateInviteCodes: crate::xrpc::XrpcClient {
    async fn create_invite_codes(&self, input: Input) -> Result<Output, Box<dyn std::error::Error>> {
        crate::xrpc::XrpcClient::send(
            self,
            http::Method::POST,
            "com.atproto.server.createInviteCodes",
            Option::<()>::None,
            Some(input),
        )
        .await
    }
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone)]
#[serde(rename_all = "camelCase")]
pub struct Input {
    pub code_count: i32,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub for_accounts: Option<Vec<String>>,
    pub use_count: i32,
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone)]
#[serde(rename_all = "camelCase")]
pub struct Output {
    pub codes: Vec<AccountCodes>,
}

pub enum Error {
}

// com.atproto.server.createInviteCodes#accountCodes
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone)]
#[serde(rename_all = "camelCase")]
pub struct AccountCodes {
    pub account: String,
    pub codes: Vec<String>,
}
