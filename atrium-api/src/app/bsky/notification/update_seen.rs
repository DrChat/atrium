// This file is generated by atrium-codegen. Do not edit.
//! Definitions for the `app.bsky.notification.updateSeen` namespace.

/// Notify server that the user has seen notifications.
#[async_trait::async_trait]
pub trait UpdateSeen: crate::xrpc::XrpcClient {
    async fn update_seen(&self, input: Input) -> Result<(), Box<dyn std::error::Error>> {
        let _ = crate::xrpc::XrpcClient::send::<Error>(
            self,
            http::Method::POST,
            "app.bsky.notification.updateSeen",
            None,
            Some(serde_json::to_vec(&input)?),
            Some(String::from("application/json")),
        )
        .await?;
        Ok(())
    }
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct Input {
    pub seen_at: String,
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "error", content = "message")]
pub enum Error {
}
