// This file is generated by atrium-codegen. DO NOT EDIT.
#![doc = "Definitions for the `app.bsky.graph.defs` namespace."]
#[doc = "`app.bsky.graph.defs#listItemView`"]
#[derive(serde :: Serialize, serde :: Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ListItemView {
    pub subject: crate::app::bsky::actor::defs::ProfileView,
}
#[doc = "`app.bsky.graph.defs#listPurpose`"]
pub type ListPurpose = String;
#[doc = "`app.bsky.graph.defs#listView`"]
#[derive(serde :: Serialize, serde :: Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ListView {
    #[serde(skip_serializing_if = "Option::is_none")]
    pub avatar: Option<String>,
    pub creator: crate::app::bsky::actor::defs::ProfileView,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub description_facets: Option<Vec<crate::app::bsky::richtext::facet::Main>>,
    pub indexed_at: String,
    pub name: String,
    pub purpose: ListPurpose,
    pub uri: String,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub viewer: Option<ListViewerState>,
}
#[doc = "`app.bsky.graph.defs#listViewBasic`"]
#[derive(serde :: Serialize, serde :: Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ListViewBasic {
    #[serde(skip_serializing_if = "Option::is_none")]
    pub avatar: Option<String>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub indexed_at: Option<String>,
    pub name: String,
    pub purpose: ListPurpose,
    pub uri: String,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub viewer: Option<ListViewerState>,
}
#[doc = "`app.bsky.graph.defs#listViewerState`"]
#[derive(serde :: Serialize, serde :: Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ListViewerState {
    #[serde(skip_serializing_if = "Option::is_none")]
    pub muted: Option<bool>,
}
#[doc = "`app.bsky.graph.defs#modlist`"]
#[doc = "A list of actors to apply an aggregate moderation action (mute/block) on"]
pub struct Modlist;
