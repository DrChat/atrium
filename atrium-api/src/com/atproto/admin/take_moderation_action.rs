// This file is generated by atrium-codegen. Do not edit.
//! Definitions for the `com.atproto.admin.takeModerationAction` namespace.

/// Take a moderation action on a repo.
#[async_trait::async_trait]
pub trait TakeModerationAction: crate::xrpc::XrpcClient {
    async fn take_moderation_action(&self, input: Input) -> Result<Output, Box<dyn std::error::Error>> {
        crate::xrpc::XrpcClient::send(
            self,
            http::Method::POST,
            "com.atproto.admin.takeModerationAction",
            Option::<()>::None,
            Some(input),
        )
        .await
    }
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone)]
#[serde(rename_all = "camelCase")]
pub struct Input {
    pub action: String,
    pub create_label_vals: Option<Vec<String>>,
    pub created_by: String,
    pub negate_label_vals: Option<Vec<String>>,
    pub reason: String,
    // pub subject: ...,
    pub subject_blob_cids: Option<Vec<String>>,
}

pub type Output = crate::com::atproto::admin::defs::ActionView;

pub enum Error {
    SubjectHasAction,
}
