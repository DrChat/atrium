// This file is generated by atprs-codegen. Do not edit.
//! Definitions for the `com.atproto.label.queryLabels` namespace.

/// Find labels relevant to the provided URI patterns.
#[async_trait::async_trait]
pub trait QueryLabels: crate::xrpc::XrpcClient {
    async fn query_labels(&self, params: Parameters) -> Result<Output, Box<dyn std::error::Error>> {
        crate::xrpc::XrpcClient::send(
            self,
            http::Method::GET,
            "com.atproto.label.queryLabels",
            Some(params),
            Option::<()>::None,
        )
        .await
    }
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone)]
#[serde(rename_all = "camelCase")]
pub struct Parameters {
    pub cursor: Option<String>,
    pub limit: Option<i32>,
    /// Optional list of label sources (DIDs) to filter on
    pub sources: Option<Vec<String>>,
    /// List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI
    pub uri_patterns: Vec<String>,
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone)]
#[serde(rename_all = "camelCase")]
pub struct Output {
    pub cursor: Option<String>,
    pub labels: Vec<crate::com::atproto::label::defs::Label>,
}

pub enum Error {
}
