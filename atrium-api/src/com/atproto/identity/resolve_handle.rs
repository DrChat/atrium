// This file is generated by atrium-codegen. Do not edit.
//! Definitions for the `com.atproto.identity.resolveHandle` namespace.

/// Provides the DID of a repo.
#[async_trait::async_trait]
pub trait ResolveHandle: crate::xrpc::XrpcClient {
    async fn resolve_handle(&self, params: Parameters) -> Result<Output, Box<dyn std::error::Error>> {
        crate::xrpc::XrpcClient::send(
            self,
            http::Method::GET,
            "com.atproto.identity.resolveHandle",
            Some(params),
            Option::<()>::None,
        )
        .await
    }
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, Default)]
#[serde(rename_all = "camelCase")]
pub struct Parameters {
    /// The handle to resolve. If not supplied, will resolve the host's own handle.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub handle: Option<String>,
}

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, Default)]
#[serde(rename_all = "camelCase")]
pub struct Output {
    pub did: String,
}

pub enum Error {
}
